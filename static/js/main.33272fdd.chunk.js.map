{"version":3,"sources":["redux/constants.js","utils/truncateOverview.js","utils/Toast.js","components/Item.jsx","redux/actions/shoppingActions.js","components/ItemList.jsx","hooks/useFetch.js","components/ColorMode.jsx","components/Navbar.jsx","components/CartItem.jsx","components/Cart.jsx","App.js","theme.js","redux/reducers/shoppingReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","truncateOverview","string","maxLength","length","substring","Toast","toast","state","position","render","p","borderRadius","color","bg","width","Item","item","useToast","dispatch","useDispatch","handleAddToCart","id","cartItems","img","image","price","desc","description","category","type","actionTypes","payload","addToCart","display","md","borderColor","maxWidth","minHeight","borderWidth","margin","src","style","height","alt","align","base","textAlign","mt","ml","my","fontSize","lineHeight","fontWeight","toUpperCase","bgColor","onClick","ItemList","url","useState","data","setData","loading","setLoading","error","setError","useEffect","axios","get","then","res","catch","err","finally","useFetch","templateColumns","gap","map","ColorMode","useColorMode","colorMode","toggleColorMode","size","mr","icon","Navbar","maxW","mb","pl","to","textDecoration","as","href","CartItem","handleDelete","removeFromCart","Cart","cart","useSelector","shop","App","exact","path","component","theme","extendTheme","config","initialColorMode","useSystemColorMode","initialState","shopReducer","action","filter","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","document","getElementById"],"mappings":"kRAAaA,EAAc,cACdC,EAAmB,mBCDnBC,EAAmB,SAACC,EAAQC,GACrC,OAAKD,EACDA,EAAOE,QAAUD,EAAkBD,EACjC,GAAN,OAAUA,EAAOG,UAAU,EAAGF,GAA9B,OAFoB,M,OCCXG,EAAQ,SAACC,EAAOL,EAAQM,GACjC,OAAOD,EAAM,CACTE,SAAU,eACVC,OAAQ,kBACJ,cAAC,IAAD,CACIC,EAAG,EACHC,aAAc,GACdC,MAAM,QACNC,IAAc,IAAVN,EAAiB,WAAa,UAClCO,MAAM,QALV,SAOKb,QCmEFc,EAtEF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACNV,EAAQW,cACRC,EAAWC,cAEXC,EAAkB,SAACC,GACrB,IAAMC,EAAY,CACdD,GAAIL,EAAKK,GACTE,IAAKP,EAAKQ,MACVC,MAAOT,EAAKS,MACZC,KAAMV,EAAKW,YACXC,SAAUZ,EAAKY,UAEfP,IAAOL,EAAKK,IAAIH,ECpBH,SAACF,GACtB,MAAO,CACHa,KAAMC,EACNC,QAAS,CAAEf,SDiBkBgB,CAAUV,IACvCjB,EAAMC,EAAO,4BAA4B,IAG7C,OACI,eAAC,IAAD,CACI2B,QAAS,CAAEC,GAAI,QACfC,YAAY,WACZC,SAAS,QACTC,UAAU,QACVC,YAAa,EACb3B,aAAc,GACd4B,OAAQ,EACR7B,EAAG,EARP,UAUI,cAAC,IAAD,CACI8B,IAAG,OAAExB,QAAF,IAAEA,OAAF,EAAEA,EAAMQ,MACXiB,MAAO,CAAE3B,MAAO,IAAK4B,OAAQ,KAC7BJ,YAAa,EACb3B,aAAc,GACdwB,YAAY,WACZI,OAAO,OACPI,IAAI,SAER,eAAC,IAAD,CACIC,MAAO,CAAEC,KAAM,SAAUX,GAAI,WAC7BY,UAAW,CAAED,KAAM,SAAUX,GAAI,QACjCa,GAAI,CAAEF,KAAM,EAAGX,GAAI,GACnBc,GAAI,CAAEd,GAAI,GAJd,UAMI,eAAC,IAAD,CACIe,GAAI,EACJhB,QAAQ,QACRiB,SAAS,MACTC,WAAW,SACXC,WAAW,WALf,cAOMpC,EAAKS,SAEX,cAAC,IAAD,CAAMwB,GAAI,EAAGrC,MAAM,WAAnB,gBACKI,QADL,IACKA,OADL,EACKA,EAAMY,SAASyB,gBAEpB,cAAC,IAAD,CAAMJ,GAAI,EAAGrC,MAAM,WAAnB,SACKZ,EAAgB,OAACgB,QAAD,IAACA,OAAD,EAACA,EAAMW,YAAa,MAEzC,cAAC,IAAD,CACIsB,GAAI,EACJb,SAAS,QACTkB,QAAQ,UACRC,QAAS,kBAAMnC,EAAgBJ,EAAKK,KAJxC,gCE7CDmC,EAfE,WACb,MCLoB,SAACC,GACrB,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAWA,OATAC,qBAAU,WACNH,GAAW,GACXI,IACKC,IAAIV,GACJW,MAAK,SAAAC,GAAG,OAAIT,EAAQS,EAAIV,SACxBW,OAAM,SAAAC,GAAG,OAAIP,EAASO,MACtBC,SAAQ,kBAAMV,GAAW,QAC/B,CAACL,IAEG,CAAEE,OAAME,UAASE,SDTSU,CAAS,qCAAlCd,EAAR,EAAQA,KAAMI,EAAd,EAAcA,MAAOF,EAArB,EAAqBA,QAErB,OACI,cAAC,IAAD,CAAMa,gBAAgB,iBAAiBC,IAAK,EAA5C,SACMZ,GAAUF,EAKH,cAAC,IAAD,CAASb,GAAG,SALpB,OACGW,QADH,IACGA,OADH,EACGA,EAAMiB,KAAI,SAAA5D,GAAI,OACV,cAAC,IAAD,UACI,cAAC,EAAD,CAAMA,KAAMA,KADDA,EAAKK,U,6EEKzBwD,EAdG,WACd,MAAuCC,cAA/BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,gBAEnB,OACI,cAAC,IAAD,CACIC,KAAK,KACLC,GAAG,IACH,aAAW,QACXC,KAAoB,UAAdJ,EAAwB,cAAC,IAAD,IAAY,cAAC,IAAD,IAC1CxB,QAASyB,KCyBNI,EA3BA,WACX,OACI,cAAC,IAAD,CAAWC,KAAK,eAAeC,GAAG,IAAlC,SACI,cAAC,IAAD,CAAKvC,GAAG,IAAIO,QAAQ,WAAW3C,aAAc,EAAGD,EAAE,IAAI6E,GAAG,IAAIjD,YAAa,EAAGH,YAAY,WAAzF,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAMqD,GAAG,IAAI/C,MAAO,CAAEgD,eAAgB,QAAtC,SACI,cAAC,IAAD,CAAK9E,aAAc,GAAI2C,QAAQ,UAAU5C,EAAE,IAA3C,SACI,cAAC,IAAD,CAASgF,GAAG,KAAKT,KAAK,KAAtB,+BAGR,cAAC,IAAD,IACA,cAAC,IAAD,CAAMO,GAAG,IAAT,SACI,cAAC,IAAD,CAAYP,KAAK,KAAKC,GAAG,IAAI,aAAW,OAAOC,KAAM,cAAC,IAAD,QAEzD,cAAC,IAAD,CAAMK,GAAG,QAAT,SACI,cAAC,IAAD,CAAYP,KAAK,KAAKC,GAAG,IAAI,aAAW,OAAOC,KAAM,cAAC,IAAD,QAEzD,mBAAGQ,KAAK,iCAAR,SACI,cAAC,IAAD,CAAYV,KAAK,KAAKC,GAAG,IAAI,aAAW,UAAUC,KAAM,cAAC,IAAD,QAG5D,cAAC,EAAD,Y,SCoCLS,EA3DE,SAAC,GAAc,IAAZ5E,EAAW,EAAXA,KACVE,EAAWC,cACXb,EAAQW,cAER4E,EAAe,SAACxE,GAClBH,ELNsB,SAACG,GAC3B,MAAO,CACHQ,KAAMC,EACNC,QAAS,CAAEV,OKGFyE,CAAezE,IACxBhB,EAAMC,EAAO,iBAAiB,IAGlC,OACI,eAAC,IAAD,CACI2B,QAAS,CAAEC,GAAI,QACfC,YAAY,WACZC,SAAS,QACTC,UAAU,QACVC,YAAa,EACb3B,aAAc,GACd4B,OAAQ,EACRS,GAAG,MACHtC,EAAG,EATP,UAWI,cAAC,IAAD,CACI8B,IAAG,OAAExB,QAAF,IAAEA,OAAF,EAAEA,EAAMO,IACXkB,MAAO,CAAE3B,MAAO,IAAK4B,OAAQ,KAC7BJ,YAAa,EACb3B,aAAc,GACdwB,YAAY,WACZI,OAAO,OACPI,IAAI,SAER,eAAC,IAAD,CACIC,MAAO,CAAEC,KAAM,SAAUX,GAAI,WAC7BY,UAAW,CAAED,KAAM,SAAUX,GAAI,QACjCa,GAAI,CAAEF,KAAM,EAAGX,GAAI,GACnBc,GAAI,CAAEd,GAAI,GAJd,UAMI,eAAC,IAAD,CACIe,GAAI,EACJhB,QAAQ,QACRiB,SAAS,MACTC,WAAW,SACXC,WAAW,WALf,qBAOMpC,QAPN,IAOMA,OAPN,EAOMA,EAAMS,SAEZ,cAAC,IAAD,CAAMwB,GAAI,EAAGrC,MAAM,WAAnB,gBACKI,QADL,IACKA,OADL,EACKA,EAAMY,SAASyB,gBAEpB,cAAC,IAAD,CAAMJ,GAAI,EAAGrC,MAAM,WAAnB,SACKZ,EAAgB,OAACgB,QAAD,IAACA,OAAD,EAACA,EAAMU,KAAM,MAElC,cAAC,IAAD,CAAQ6B,QAAS,kBAAMsC,EAAa7E,EAAKK,KAAKiC,QAAQ,UAAUL,GAAI,EAApE,qCCxBD8C,EA7BF,WACT,IAAQC,EAASC,aAAY,SAAA1F,GAAK,OAAIA,EAAM2F,QAApCF,KAER,OAAoB,IAAhBA,EAAK7F,OAED,eAAC,IAAD,CAAK2C,UAAU,SAAf,UACI,cAAC,IAAD,CAASlC,MAAM,iBAAiB8E,GAAG,KAAnC,+BAGA,cAAC,IAAD,CAAMF,GAAG,IAAT,SACI,cAAC,IAAD,CAAYpC,WAAW,WAAvB,uCASZ,cAAC,IAAD,CAAMsB,gBAAgB,iBAAiBC,IAAK,EAA5C,gBACKqB,QADL,IACKA,OADL,EACKA,EAAMpB,KAAI,SAAA5D,GAAI,OACX,cAAC,IAAD,UACI,cAAC,EAAD,CAAUA,KAAMA,KADLA,EAAKK,UCLrB8E,EAdH,WACV,OACE,qCACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAWd,KAAK,eAAe/B,QAAQ,WAAWnB,YAAY,WAAWG,YAAa,EAAG3B,aAAc,GAAvG,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyF,OAAK,EAACC,KAAK,QAAQC,UAAWP,IACrC,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,IAAIC,UAAW9C,a,2BCR5B+C,EAFDC,YAAY,CAAEC,OALb,CACXC,iBAAkB,QAClBC,oBAAoB,K,gCCFlBC,EAAe,CACjBZ,KAAM,IAuBKa,EApBK,WAAmC,IAAlCtG,EAAiC,uDAAzBqG,EAAcE,EAAW,uCAClD,OAAQA,EAAOjF,MACX,KAAKC,EACD,IAAQd,EAAS8F,EAAO/E,QAAhBf,KACR,OAAO,2BACAT,GADP,IAEIyF,KAAK,GAAD,mBAAMzF,EAAMyF,MAAZ,CAAkBhF,MAG9B,KAAKc,EACD,IAAQT,EAAOyF,EAAO/E,QAAdV,GACR,OAAO,2BACAd,GADP,IAEIyF,KAAMzF,EAAMyF,KAAKe,QAAO,SAAA/F,GAAI,OAAIA,EAAKK,KAAOA,OAEpD,QACI,OAAOd,ICfJyG,EAJKC,0BAAgB,CAChCf,KAAMW,ICEKK,EAFDC,sBAAYH,EAAa,GAAII,iCCQ3CC,IAAS5G,OACP,eAAC,IAAD,WACE,cAAC,IAAD,CAAiBiG,iBAAkBH,EAAME,OAAOC,mBAChD,cAAC,IAAD,CAAUQ,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,WAINI,SAASC,eAAe,W","file":"static/js/main.33272fdd.chunk.js","sourcesContent":["export const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\r\n","export const truncateOverview = (string, maxLength) => {\r\n    if (!string) return null;\r\n    if (string.length <= maxLength) return string;\r\n    return `${string.substring(0, maxLength)}...`;\r\n};","import { Box } from \"@chakra-ui/react\";\r\n\r\nexport const Toast = (toast, string, state) => {\r\n    return toast({\r\n        position: \"bottom-right\",\r\n        render: () => (\r\n            <Box\r\n                p={3}\r\n                borderRadius={10}\r\n                color=\"white\"\r\n                bg={state === true ? 'blue.300' : 'red.300'}\r\n                width='200px'\r\n            >\r\n                {string}\r\n            </Box>\r\n        )\r\n    });\r\n\r\n};\r\n\r\n","import React from 'react';\r\n\r\nimport { Box, Button, Image, Stack, Text, useToast } from '@chakra-ui/react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToCart } from '../redux/actions/shoppingActions';\r\n\r\nimport { truncateOverview } from '../utils/truncateOverview';\r\nimport { Toast } from '../utils/Toast';\r\n\r\nconst Item = ({ item }) => {\r\n    const toast = useToast();\r\n    const dispatch = useDispatch();\r\n\r\n    const handleAddToCart = (id) => {\r\n        const cartItems = {\r\n            id: item.id,\r\n            img: item.image,\r\n            price: item.price,\r\n            desc: item.description,\r\n            category: item.category\r\n        };\r\n        if (id === item.id) dispatch(addToCart(cartItems));\r\n        Toast(toast, 'Item added to your cart.', true);\r\n    };\r\n\r\n    return (\r\n        <Box\r\n            display={{ md: \"flex\" }}\r\n            borderColor='teal.300'\r\n            maxWidth=\"32rem\"\r\n            minHeight='13rem'\r\n            borderWidth={3}\r\n            borderRadius={15}\r\n            margin={2}\r\n            p={4}\r\n        >\r\n            <Image\r\n                src={item?.image}\r\n                style={{ width: 200, height: 200 }}\r\n                borderWidth={3}\r\n                borderRadius={15}\r\n                borderColor='teal.300'\r\n                margin=\"auto\"\r\n                alt=\"item\"\r\n            />\r\n            <Stack\r\n                align={{ base: \"center\", md: \"stretch\" }}\r\n                textAlign={{ base: \"center\", md: \"left\" }}\r\n                mt={{ base: 4, md: 0 }}\r\n                ml={{ md: 6 }}\r\n            >\r\n                <Text\r\n                    my={1}\r\n                    display=\"block\"\r\n                    fontSize=\"3xl\"\r\n                    lineHeight=\"normal\"\r\n                    fontWeight=\"semibold\"\r\n                >\r\n                    ${item.price}\r\n                </Text>\r\n                <Text my={2} color=\"gray.500\">\r\n                    {item?.category.toUpperCase()}\r\n                </Text>\r\n                <Text my={2} color=\"gray.800\" >\r\n                    {truncateOverview(item?.description, 50)}\r\n                </Text>\r\n                <Button\r\n                    my={2}\r\n                    maxWidth=\"100px\"\r\n                    bgColor='gray.50'\r\n                    onClick={() => handleAddToCart(item.id)}\r\n                >\r\n                    Add To Cart\r\n                </Button>\r\n            </Stack>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Item;\r\n","import * as actionTypes from '../constants';\r\n\r\nexport const addToCart = (item) => {\r\n    return {\r\n        type: actionTypes.ADD_TO_CART,\r\n        payload: { item }\r\n    };\r\n};\r\n\r\nexport const removeFromCart = (id) => {\r\n    return {\r\n        type: actionTypes.REMOVE_FROM_CART,\r\n        payload: { id }\r\n    };\r\n};","import React from 'react';\r\n\r\nimport { Grid, GridItem, Spinner } from \"@chakra-ui/react\";\r\nimport { useFetch } from '../hooks/useFetch';\r\n\r\nimport Item from './Item';\r\n\r\nconst ItemList = () => {\r\n    const { data, error, loading } = useFetch('https://fakestoreapi.com/products');\r\n\r\n    return (\r\n        <Grid templateColumns=\"repeat(2, 1fr)\" gap={6}>\r\n            {!error && !loading ?\r\n                data?.map(item => (\r\n                    <GridItem key={item.id}>\r\n                        <Item item={item} />\r\n                    </GridItem>\r\n                )) : <Spinner ml='100%' />}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default ItemList;\r\n","import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const useFetch = (url) => {\r\n    const [data, setData] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        axios\r\n            .get(url)\r\n            .then(res => setData(res.data))\r\n            .catch(err => setError(err))\r\n            .finally(() => setLoading(false));\r\n    }, [url]);\r\n\r\n    return { data, loading, error };\r\n};\r\n","import React from 'react';\r\n\r\nimport { IconButton, useColorMode } from '@chakra-ui/react';\r\nimport { FiSun, FiMoon } from 'react-icons/fi';\r\n\r\nconst ColorMode = () => {\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    return (\r\n        <IconButton\r\n            size='lg'\r\n            mr='2'\r\n            aria-label='light'\r\n            icon={colorMode === 'light' ? <FiSun /> : <FiMoon />}\r\n            onClick={toggleColorMode}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ColorMode;\r\n","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { RiShoppingCartLine } from 'react-icons/ri';\r\nimport { AiOutlineHome } from 'react-icons/ai';\r\nimport { FiTwitter } from 'react-icons/fi';\r\n\r\nimport { Box, Container, Flex, Heading, IconButton, Spacer } from '@chakra-ui/react';\r\n\r\nimport ColorMode from './ColorMode';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <Container maxW='container.lg' mb='4'>\r\n            <Box mt='3' bgColor='teal.200' borderRadius={8} p='2' pl='3' borderWidth={3} borderColor='teal.300'>\r\n                <Flex>\r\n                    <Link to='/' style={{ textDecoration: 'none' }}>\r\n                        <Box borderRadius={17} bgColor='gray.50' p='2'>\r\n                            <Heading as='h1' size='lg'>Shopping Cart</Heading>\r\n                        </Box>\r\n                    </Link>\r\n                    <Spacer />\r\n                    <Link to='/' >\r\n                        <IconButton size='lg' mr='2' aria-label='Home' icon={<AiOutlineHome />} />\r\n                    </Link>\r\n                    <Link to='/cart'>\r\n                        <IconButton size='lg' mr='2' aria-label='Cart' icon={<RiShoppingCartLine />} />\r\n                    </Link>\r\n                    <a href=\"https://twitter.com/seymennklc\">\r\n                        <IconButton size='lg' mr='2' aria-label='twitter' icon={<FiTwitter />} />\r\n                    </a>\r\n                    {/* Theme Component */}\r\n                    <ColorMode />\r\n                </Flex >\r\n            </Box >\r\n        </Container>\r\n    );\r\n};\r\nexport default Navbar;;","import React from 'react';\r\n\r\nimport { Box, Button, Image, Stack, Text, useToast } from '@chakra-ui/react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { removeFromCart } from '../redux/actions/shoppingActions';\r\n\r\nimport { truncateOverview } from '../utils/truncateOverview';\r\nimport { Toast } from '../utils/Toast';\r\n\r\nconst CartItem = ({ item }) => {\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n\r\n    const handleDelete = (id) => {\r\n        dispatch(removeFromCart(id));\r\n        Toast(toast, 'Item deleted.', false);\r\n    };\r\n\r\n    return (\r\n        <Box\r\n            display={{ md: \"flex\" }}\r\n            borderColor='teal.300'\r\n            maxWidth=\"32rem\"\r\n            minHeight='13rem'\r\n            borderWidth={3}\r\n            borderRadius={15}\r\n            margin={2}\r\n            ml='25%'\r\n            p={4}\r\n        >\r\n            <Image\r\n                src={item?.img}\r\n                style={{ width: 200, height: 200 }}\r\n                borderWidth={3}\r\n                borderRadius={15}\r\n                borderColor='teal.300'\r\n                margin=\"auto\"\r\n                alt=\"item\"\r\n            />\r\n            <Stack\r\n                align={{ base: \"center\", md: \"stretch\" }}\r\n                textAlign={{ base: \"center\", md: \"left\" }}\r\n                mt={{ base: 4, md: 0 }}\r\n                ml={{ md: 6 }}\r\n            >\r\n                <Text\r\n                    my={1}\r\n                    display=\"block\"\r\n                    fontSize=\"3xl\"\r\n                    lineHeight=\"normal\"\r\n                    fontWeight=\"semibold\"\r\n                >\r\n                    ${item?.price}\r\n                </Text>\r\n                <Text my={2} color=\"gray.500\">\r\n                    {item?.category.toUpperCase()}\r\n                </Text>\r\n                <Text my={2} color=\"gray.800\" >\r\n                    {truncateOverview(item?.desc, 50)}\r\n                </Text>\r\n                <Button onClick={() => handleDelete(item.id)} bgColor='red.200' my={2}>\r\n                    Remove From Cart\r\n                </Button>\r\n            </Stack>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default CartItem;\r\n","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { Box, Grid, GridItem, Heading, Link as ChakraLink } from '@chakra-ui/react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport CartItem from './CartItem';\r\n\r\nconst Cart = () => {\r\n    const { cart } = useSelector(state => state.shop);\r\n\r\n    if (cart.length === 0) {\r\n        return (\r\n            <Box textAlign='center'>\r\n                <Heading color='blackAlpha.500' as='h2'>\r\n                    There is no item.\r\n                </Heading>\r\n                <Link to='/'>\r\n                    <ChakraLink fontWeight='semibold'>\r\n                        Go back to home page\r\n                    </ChakraLink>\r\n                </Link>\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Grid templateColumns=\"repeat(1, 1fr)\" gap={1}>\r\n            {cart?.map(item => (\r\n                <GridItem key={item.id}>\r\n                    <CartItem item={item} />\r\n                </GridItem>\r\n            ))}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n","import React from 'react';\n\nimport { Route, Switch } from 'react-router-dom';\nimport { Container } from '@chakra-ui/react';\n\n// Components\nimport ItemList from './components/ItemList';\nimport Navbar from './components/Navbar';\nimport Cart from './components/Cart';\n\nconst App = () => {\n  return (\n    <>\n      <Navbar />\n      <Container maxW='container.lg' bgColor='teal.100' borderColor='teal.300' borderWidth={3} borderRadius={10}>\n        <Switch>\n          <Route exact path='/cart' component={Cart} />\n          <Route exact path='/' component={ItemList} />\n        </Switch>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import { extendTheme } from \"@chakra-ui/react\";\r\n\r\nconst config = {\r\n    initialColorMode: \"light\",\r\n    useSystemColorMode: false,\r\n};\r\n\r\nconst theme = extendTheme({ config });\r\n\r\nexport default theme;","import * as actionTypes from '../constants';\r\n\r\nconst initialState = {\r\n    cart: [],\r\n};\r\n\r\nconst shopReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_TO_CART: {\r\n            const { item } = action.payload;\r\n            return {\r\n                ...state,\r\n                cart: [...state.cart, item]\r\n            };\r\n        }\r\n        case actionTypes.REMOVE_FROM_CART:\r\n            const { id } = action.payload;\r\n            return {\r\n                ...state,\r\n                cart: state.cart.filter(item => item.id !== id)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default shopReducer;","import { combineReducers } from \"redux\";\r\nimport shopReducer from \"./shoppingReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    shop: shopReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst store = createStore(rootReducer, {}, composeWithDevTools());\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { ChakraProvider, ColorModeScript } from '@chakra-ui/react';\nimport theme from './theme';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <ChakraProvider>\n    <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </ChakraProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}